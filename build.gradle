plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ru.wallentos'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.telegram', name: 'telegrambots', version: '6.1.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.32'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.32'
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.10.0'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.11.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20220815-2.0.0'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20220927-2.0.0'
    
}
tasks.named('test') {
    useJUnitPlatform()
}

task copyAllDependencies(type: Copy) {
    from(configurations.runtimeClasspath.files)
    into("$buildDir/libs/lib")
}


jar {
    def jars = configurations.runtimeClasspath.files.collect { "lib/$it.name" }
    manifest {
        attributes 'Main-Class': 'ru.wallentos.carworker.CarWorkerApplication'
        attributes 'Class-Path': jars.join(' ')
    }
    //duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    //from(configurations.runtimeClasspath.files.collect { zipTree(it) })
}
jar.dependsOn copyAllDependencies